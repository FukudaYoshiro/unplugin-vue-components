import { resolve, dirname, relative } from 'path'
import fs from 'fs/promises'
import { Context } from './context'

export async function generateDeclaration(ctx: Context, root: string, filepath: string) {
  const lines = Object.values(ctx.componentNameMap)
    .map(({ path, name, importName }) => {
      const related = path.startsWith('/')
        ? `./${relative(dirname(filepath), resolve(root, path.slice(1)))}`
        : path
      let entry = `${name}: typeof import('${related}')`
      if (importName)
        entry += `['${importName}']`
      else
        entry += '[\'default\']'
      return entry
    })

  const code = `// generated by vite-plugin-components
// read more https://github.com/vuejs/vue-next/pull/3399

declare module 'vue' {
  export interface GlobalComponents {
    ${lines.join('\n    ')}
  }
}

export { }
`
  await fs.writeFile(filepath, code, 'utf-8')
}
